{"ast":null,"code":"import { INCREMENT, DECREMENT } from './counter.types';\nconst INITIAL_STATE = {\n  count: 0\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT:\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case DECREMENT:\n      return { ...state,\n        count: state.count - 1\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};","map":{"version":3,"names":["INCREMENT","DECREMENT","INITIAL_STATE","count","reducer","state","action","type"],"sources":["C:/Users/Dime/Desktop/Spotify/client/src/redux/Counter/counter.reducer.js"],"sourcesContent":["import { INCREMENT, DECREMENT } from './counter.types';\r\n\r\nconst INITIAL_STATE = {\r\n    count: 0,\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case INCREMENT:\r\n            return {\r\n                ...state, count: state.count + 1,\r\n            };\r\n        case DECREMENT:\r\n            return {\r\n                ...state, count: state.count - 1,\r\n            };\r\n        default: return state;\r\n    };\r\n};"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,iBAArC;AAEA,MAAMC,aAAa,GAAG;EAClBC,KAAK,EAAE;AADW,CAAtB;;AAIA,MAAMC,OAAO,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BH,aAA0B;EAAA,IAAXI,MAAW;;EAC/C,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKP,SAAL;MACI,OAAO,EACH,GAAGK,KADA;QACOF,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;MAD5B,CAAP;;IAGJ,KAAKF,SAAL;MACI,OAAO,EACH,GAAGI,KADA;QACOF,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;MAD5B,CAAP;;IAGJ;MAAS,OAAOE,KAAP;EATb;;EAUC;AACJ,CAZD"},"metadata":{},"sourceType":"module"}